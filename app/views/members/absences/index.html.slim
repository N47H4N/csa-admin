#absences
section
  h2 = t('.present_or_future_absences')
  - @present_or_future_absences = current_member.absences.present_or_future
  - if @present_or_future_absences.empty?
    p.empty = t('.no_present_or_future_absences')
  - else
    ul.absences
      - @present_or_future_absences.each do |absence|
        li
          span.text
            span.date = l(absence.started_on)
            = ' – '
            span.date = l(absence.ended_on)
          span.action
            == link_to t('.cancel_link'), [:members, absence], method: :delete, class: 'cancel'

section
  h2 = t('.form_title')
  - if Current.acp.absences_billed?
    p = t('.explanation_billed')

  = form_for [:members, @absence] do |f|

    - if @absence.errors.any?
      ul.errors
        - @absence.errors.full_messages.each do |msg|
          li = msg

    .input
      = f.label :started_on
      = f.date_field :started_on, placeholder: 'dd.mm.yyyy', min: Absence.min_started_on, max: Absence.max_ended_on, class: 'date-input'
    .input
      = f.label :ended_on
      = f.date_field :ended_on, placeholder: 'dd.mm.yyyy', min: Absence.min_started_on, max: Absence.max_ended_on, class: 'date-input'
    .input.submit
      = f.submit t('.submit')

section
  h2 = t('.past_absences')
  - @past_absences = current_member.absences.past.order('ended_on DESC')
  - if @past_absences.empty?
    p.empty = t('.no_past_absences')
  - else
    ul.absences
      - @past_absences.each do |absence|
        li
          span.text
            span.date = l(absence.started_on)
            = ' – '
            span.date = l(absence.ended_on)
