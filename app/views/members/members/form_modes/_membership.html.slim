- support_checked = @member.waiting_basket_size_id&.zero?
div data-controller="form-disabler form-min-value-enforcer form-choice-excluder form-choices-limiter form-activity"
  legend class="text-lg font-medium text-gray-700 dark:text-gray-300"
    = Membership.model_name.human
  div class='space-y-10'
    div class='font-normal text-gray-500 mt-2 text-justify space-y-2 print:break-after-auto print:break-inside-avoid'
      - unless Current.acp.member_form_extra_text_only?
        p
          = t('.text', fiscal_year_months_range: fiscal_year_months_range)
          - if Current.acp.trial_basket_count.positive?
            = ' '
            = t('.trial_text', count: Current.acp.trial_basket_count)
        - if Current.acp.annual_fee?
          p == t('.annual_fee_text', price: cur(Current.acp.annual_fee, precision: 0))
        - if Current.acp.share?
          p == t('.acp_shares_text', price: cur(Current.acp.share_price, precision: 0))
      - if Current.acp.member_form_extra_text?
        == Current.acp.member_form_extra_text

      = f.input :waiting_basket_size_id, as: :radio_buttons, collection: basket_sizes_collection(data: { action: 'form-disabler#enableInputs form-min-value-enforcer#enforceMinValue form-choices-limiter#limitChoices form-activity#updateInput form-pricing#refresh'}, no_basket_data: { action: 'form-disabler#disableInputs form-min-value-enforcer#enforceMinValue form-choices-limiter#limitChoices form-pricing#refresh' }), required: true, label: BasketSize.model_name.human, label_html: { class: 'mt-4 font-medium text-gray-700 dark:text-gray-300' }, input_html: { class: 'mr-4 flex-none h-6 w-6 border-2 border-gray-300 dark:border-gray-700 text-green-500 dark:bg-black focus:outline-none focus:ring-green-500 focus:border-green-500 cursor-pointer' }, item_label_class: 'border-gray-200 dark:border-gray-800 border rounded px-4 py-2 flex flex-row flex-nowrap items-center cursor-pointer print:border-0 print:py-0', wrapper_class: 'flex flex-col space-y-2'

    - if Current.acp.share?
      = f.input :desired_acp_shares_number, as: :numeric, required: true, input_html: { min: 1, max: 20, data: { form_min_value_enforcer_target: 'input', action: 'form-pricing#refresh' }, class: 'mt-1 dark:bg-black w-20 px-3 py-2 border border-gray-300 dark:border-gray-700 placeholder-gray-400 dark:placeholder-gray-600 text-gray-900 dark:text-gray-100 rounded-md focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 ' }, hint: t('.desired_acp_shares_number_hint'), label_html: { class: 'inline-block w-full font-medium text-gray-700 dark:text-gray-300' }, hint_html: { class: 'inline-block w-full text-sm'}

    - if @member.members_basket_complements.any?
      div class="print:break-after-auto print:break-inside-avoid" data-form-disabler-target='label'
        label class="font-medium text-gray-700 dark:text-gray-300 #{'disabled' if support_checked}"
          = BasketComplement.model_name.human(count: 2)
        - if Current.acp.member_form_complements_text?
          div class="mt-1 mb-4 text-sm text-justify"
            == Current.acp.member_form_complements_text
        = f.simple_fields_for :members_basket_complements, data: { form_disabler_target: 'label' } do |ff|
          = ff.input :basket_complement_id, as: :hidden
          = ff.input :quantity, as: :numeric, label: basket_complement_label(ff.object.basket_complement), required: false, disabled: support_checked, wrapper_html: { class: ('disabled' if support_checked), data: { form_disabler_target: 'label' } }, input_html: { min: 0, data: { form_disabler_target: 'input', default_value: '0', action: 'form-activity#updateInput form-pricing#refresh', activity: ff.object.basket_complement.activity_participations_demanded_annually }, class: 'order-1 dark:bg-black w-16 px-3 py-2 border border-gray-300 dark:border-gray-700 placeholder-gray-400 dark:placeholder-gray-600 text-gray-900 dark:text-gray-100 rounded-md focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10' }, label_html: { class: 'order-2 ml-4' }, wrapper_class: 'mt-2 flex items-center'

    - if show_activity_participations?
      = f.input :waiting_activity_participations_demanded_annually, as: :numeric, label: activities_human_name, required: true, input_html: { min: Current.acp.activity_participations_form_min || 0, max: Current.acp.activity_participations_form_max, data: { min: Current.acp.activity_participations_form_min, max: Current.acp.activity_participations_form_max, form_activity_target: 'input', action: 'form-pricing#refresh' }, class: 'mt-1 dark:bg-black w-20 px-3 py-2 border border-gray-300 dark:border-gray-700 placeholder-gray-400 dark:placeholder-gray-600 text-gray-900 dark:text-gray-100 rounded-md focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 ' }, hint: activity_participations_form_detail, label_html: { class: 'inline-block w-full font-medium text-gray-700 dark:text-gray-300' }, hint_html: { class: 'inline-block w-full text-sm'}

    - if show_basket_price_extras?
      div class="print:break-after-page print:break-inside-avoid" data-form-disabler-target='label'
        label class="font-medium text-gray-700 dark:text-gray-300"
          = Current.acp.basket_price_extra_public_title
          = " "
          abbr title=t('simple_form.required.text') = t('simple_form.required.mark')
        - if Current.acp.basket_price_extra_text?
          div class="mt-1 mb-3 text-sm text-justify"
            = Current.acp.basket_price_extra_text&.html_safe
        = f.input :waiting_basket_price_extra, as: :radio_buttons, collection: basket_prices_extra_collection(data: { form_disabler_target: 'input', action: 'form-pricing#refresh' }), label: false, wrapper_html: { class: ('disabled' if support_checked), data: { form_disabler_target: 'label' } }, input_html: { disabled: support_checked, class: 'mr-4 flex-none h-6 w-6 border-2 border-gray-300 dark:border-gray-700 text-green-500 dark:bg-black focus:outline-none focus:ring-green-500 focus:border-green-500 cursor-pointer' }, item_label_class: 'border-gray-200 dark:border-gray-800 border rounded px-4 py-2 flex flex-row flex-nowrap items-center cursor-pointer print:border-0 print:py-0', wrapper_class: 'flex flex-col space-y-2'

    div class='space-y-6 print:break-after-page print:break-inside-avoid'
      - grouped_depots = visible_depots.group_by(&:group)
      - if grouped_depots.keys.compact.any?
        div
          label class="font-medium text-gray-700 dark:text-gray-300"
            = Depot.model_name.human(count: 2)
            = " "
            abbr title=t('simple_form.required.text') = t('simple_form.required.mark')

          div class='mt-2 space-y-6'
            - grouped_depots = grouped_depots.sort_by { |g, _d| g&.member_order_priority.to_s + g&.public_name.to_s }
            - grouped_depots.each do |group, depots|
              div
                - if group
                  label class="font-medium text-sm text-gray-700 dark:text-gray-300"
                    = group.public_name
                  div class="mt-1 mb-3 text-sm text-justify"
                    = group.information_text&.html_safe

                = f.input :waiting_depot_id, hidden_fields: false, as: :radio_buttons, collection: depots_collection(depots: depots, data: { form_disabler_target: 'input', action: 'form-choice-excluder#excludeChoice form-choices-limiter#limitChoices form-pricing#refresh' }), label: false,
                wrapper_html: { class: ('disabled' if support_checked), data: { form_disabler_target: 'label' } }, input_html: { disabled: support_checked, class: 'mr-4 flex-none h-6 w-6 border-2 border-gray-300 dark:border-gray-700 text-green-500 dark:bg-black focus:outline-none focus:ring-green-500 focus:border-green-500 cursor-pointer' }, item_label_class: 'border-gray-200 dark:border-gray-800 border rounded px-4 py-2 flex flex-row flex-nowrap items-center cursor-pointer print:border-0 print:py-0', wrapper_class: 'flex flex-col space-y-2', include_hidden: false
      - else
        = f.input :waiting_depot_id, as: :radio_buttons, collection: depots_collection(data: { form_disabler_target: 'input', action: 'form-choice-excluder#excludeChoice form-choices-limiter#limitChoices form-pricing#refresh' }), label: Depot.model_name.human, required: true,
        wrapper_html: { class: ('disabled' if support_checked), data: { form_disabler_target: 'label' } }, input_html: { disabled: support_checked, class: 'mr-4 flex-none h-6 w-6 border-2 border-gray-300 dark:border-gray-700 text-green-500 dark:bg-black focus:outline-none focus:ring-green-500 focus:border-green-500 cursor-pointer' }, item_label_class: 'border-gray-200 dark:border-gray-800 border rounded px-4 py-2 flex flex-row flex-nowrap items-center cursor-pointer print:border-0 print:py-0', wrapper_class: 'flex flex-col space-y-2', label_html: { class: 'font-medium text-gray-700 dark:text-gray-300' }

      - if DeliveryCycle.visible?
        = f.input :waiting_delivery_cycle_id, as: :radio_buttons, collection: visible_delivery_cycles_collection(data: { form_disabler_target: 'input', form_choices_limiter_target: 'input', action: 'form-pricing#refresh' }), disabled: (f.object.waiting_depot ? (DeliveryCycle.pluck(:id) - (f.object.waiting_depot&.delivery_cycle_ids || [])) : []), label: Delivery.model_name.human(count: 2), required: true,
        wrapper_html: { class: ('disabled' if support_checked), data: { form_disabler_target: 'label' } }, input_html: { disabled: support_checked, class: 'mr-4 flex-none h-6 w-6 border-2 border-gray-300 dark:border-gray-700 text-green-500 dark:bg-black focus:outline-none focus:ring-green-500 focus:border-green-500 cursor-pointer' }, item_label_class: "border-gray-200 dark:border-gray-800 border rounded px-4 py-2 flex flex-row flex-nowrap items-center cursor-pointer print:border-0 print:py-0 #{'disabled' if (support_checked || !f.object.waiting_depot)}", wrapper_class: 'flex flex-col space-y-2', label_html: { class: 'font-medium text-gray-700 dark:text-gray-300' }

      - if Current.acp.allow_alternative_depots?
        = f.input :waiting_alternative_depot_ids, as: :check_boxes, collection: depots_collection(data: { form_disabler_target: 'input', form_choice_excluder_target: 'input' }), disabled: [f.object.waiting_depot_id].compact, required: false, hint: true, wrapper_html: { class: ('disabled' if support_checked), data: { form_disabler_target: 'label' } }, input_html: { disabled: (depots_collection.map(&:last) if support_checked), class: 'mr-4 flex-none h-6 w-6 rounded border-2 border-gray-300 dark:border-gray-700 text-green-500 dark:bg-black focus:outline-none focus:ring-green-500 focus:border-green-500 cursor-pointer' }, item_label_class: 'border-gray-200 dark:border-gray-800 border rounded px-4 py-2 flex flex-row flex-nowrap items-center cursor-pointer print:border-0 print:py-0', wrapper_class: 'flex flex-col space-y-2', label_html: { class: 'font-medium text-gray-700 dark:text-gray-300' }

    - if Current.acp.billing_year_divisions.many?
      div class="print:break-inside-avoid"
        label class="font-medium text-gray-700 dark:text-gray-300"
          = t('active_admin.resource.show.billing')
          = " "
          abbr title=t('simple_form.required.text') = t('simple_form.required.mark')
        = f.input :waiting_billing_year_division, as: :radio_buttons, collection: billing_year_divisions_collection(data: { form_disabler_target: 'input', disabled_value: 1 }), wrapper_html: { class: ('disabled' if support_checked), data: { form_disabler_target: 'label' } }, input_html: { disabled: support_checked, class: 'mr-4 flex-none h-6 w-6 border-2 border-gray-300 dark:border-gray-700 text-green-500 dark:bg-black focus:outline-none focus:ring-green-500 focus:border-green-500 cursor-pointer' }, item_label_class: 'text-sm font-medium text-gray-700 dark:text-gray-300 border-gray-200 dark:border-gray-800 border rounded px-4 py-2 flex flex-row flex-nowrap items-center cursor-pointer print:border-0 print:py-0', wrapper_class: 'flex flex-col space-y-2', label: false

