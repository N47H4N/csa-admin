h1 = t('.title')
p = t('.text')

= semantic_form_for @member, url: members_member_path, data: { controller: 'form-disabler form-min-value-enforcer'} do |f|
  = invisible_captcha

  = f.inputs do
    = f.input :name, label: t('.name')
    = f.input :address
    = f.input :zip, input_html: { size: 6, maxlength: 6 }, wrapper_html: { class: 'fl' }
    = f.input :city, wrapper_html: { class: 'fl' }
    = f.input :country_code, as: :select, collection: countries_collection

  = f.inputs name: Member.human_attribute_name(:contact) do
    = f.input :emails, as: :string, required: true
    = f.input :phones, as: :string, required: true

  - support_checked = @member.waiting_basket_size_id&.zero?
  = f.inputs name: Membership.model_name.human do
    - unless Current.acp.membership_extra_text_only?
      p
        = t('.membership_text', fiscal_year_months_range: fiscal_year_months_range)
        - if Current.acp.trial_basket_count.positive?
          = ' '
          = t('.membership_trial_text', count: Current.acp.trial_basket_count)
      - if Current.acp.annual_fee?
        p == t('.annual_fee_text', price: cur(Current.acp.annual_fee, precision: 0))
      - if Current.acp.share?
        p == t('.acp_shares_text', price: cur(Current.acp.share_price, precision: 0))
    - if Current.acp.membership_extra_text
      div.extra_text == Current.acp.membership_extra_text

    = f.input :waiting_basket_size, as: :pretty_radio, collection: basket_sizes_collection(data: { action: 'form-disabler#enableInputs form-min-value-enforcer#enforceMinValue'}, no_basket_data: { action: 'form-disabler#disableInputs form-min-value-enforcer#enforceMinValue' }), required: true, label: BasketSize.model_name.human

    - if Current.acp.share?
      = f.input :desired_acp_shares_number, as: :number, min: 1, max: 20, required: true, input_html: { value: [@member.desired_acp_shares_number, 1].max, data: { form_min_value_enforcer_target: 'input '} }, hint: t('.desired_acp_shares_number_hint')

    - if Current.acp.basket_price_extras?
      = f.input :waiting_basket_price_extra, as: :pretty_radio, collection: basket_prices_extra_collection(data: { form_disabler_target: 'input' }), label: Current.acp.basket_price_extra_title, text: Current.acp.basket_price_extra_text&.html_safe, hint: false, wrapper_html: { class: ('disabled' if support_checked), data: { form_disabler_target: 'label' } }, input_html: { disabled: support_checked }

    - if @member.members_basket_complements.any?
      = f.inputs BasketComplement.model_name.human(count: 2), class: 'basket_complements', data: { form_disabler_target: 'label' } do
        = f.semantic_fields_for :members_basket_complements do |ff|
          = ff.input :basket_complement_id, as: :hidden
          = ff.input :quantity, as: :number, min: 0, label: basket_complement_label(ff.object.basket_complement), required: false, disabled: support_checked, wrapper_html: { class: ('disabled' if support_checked) }, input_html: { data: { form_disabler_target: 'input', default_value: '0' } }

    div data-controller="form-choice-excluder"
      = f.input :waiting_depot, as: :pretty_radio, collection: depots_collection(data: { form_disabler_target: 'input', action: 'form-choice-excluder#excludeChoice' }), label: Depot.model_name.human, required: true,
      wrapper_html: { class: ('disabled' if support_checked), data: { form_disabler_target: 'label' } }, input_html: { disabled: support_checked }

      - if Current.acp.allow_alternative_depots?
        = f.input :waiting_alternative_depot_ids, as: :pretty_check_boxes, collection: depots_collection(data: { form_disabler_target: 'input', form_choice_excluder_target: 'input' }), required: false, hint: true,
      wrapper_html: { class: ('disabled' if support_checked), data: { form_disabler_target: 'label' } }, input_html: { disabled: (depots_collection.map(&:last) if support_checked) }

    - if Current.acp.billing_year_divisions.many?
      = f.inputs name: t('active_admin.resource.show.billing') do
        = f.input :billing_year_division, as: :pretty_radio, collection: billing_year_divisions_collection(data: { form_disabler_target: 'input', disabled_value: 1 }), wrapper_html: { class: ('disabled' if support_checked), data: { form_disabler_target: 'label' } }, input_html: { disabled: support_checked }

  = f.inputs name: t('.more_info') do
    = f.input :profession, hint: true
    = f.input :come_from, as: :text, input_html: { rows: 3 }
    = f.input :note, as: :text, input_html: { rows: 3 }, label: t('.note')

  - if Current.acp.terms_of_service_url || Current.acp.statutes_url
    = f.inputs do
      = f.input :terms_of_service, as: :pretty_boolean, label: terms_of_service_label

  = f.actions do
    = f.action :submit, as: :button, label: t('.submit')
