h1 = t('.title')
p = t('.text')

= semantic_form_for @member, url: members_member_path do |f|
  = invisible_captcha

  = f.inputs do
    = f.input :name, label: t('.name')
    = f.input :address
    = f.input :zip, input_html: { size: 6, maxlength: 6 }, wrapper_html: { class: 'fl' }
    = f.input :city, wrapper_html: { class: 'fl' }
    = f.input :country_code, as: :select, collection: countries_collection

  = f.inputs name: Member.human_attribute_name(:contact) do
    = f.input :emails, as: :string, required: true
    = f.input :phones, as: :string, required: true

  - support_checked = @member.waiting_basket_size_id&.zero?
  = f.inputs name: Membership.model_name.human do
    p
      = t('.membership_text', fiscal_year_months_range: fiscal_year_months_range)
      - if Current.acp.trial_basket_count.positive?
        = ' '
        = t('.membership_trial_text', count: Current.acp.trial_basket_count)
    - if Current.acp.annual_fee?
      p == t('.annual_fee_text', price: cur(Current.acp.annual_fee, precision: 0))
    - if Current.acp.share?
      p == t('.acp_shares_text', price: cur(Current.acp.share_price, precision: 0))
    - if Current.acp.membership_extra_text
      p = h Current.acp.membership_extra_text.html_safe

    = f.input :waiting_basket_size, as: :pretty_radio, collection: basket_sizes_collection, required: true, label: BasketSize.model_name.human

    - if Current.acp.feature_flag?(:basket_price_extra)
      - if Current.acp.ragedevert?
        = f.input :waiting_basket_price_extra, as: :pretty_radio, collection: basket_prices_extra_collection, \
          label: "Prix de votre panier - Il détermine le salaire des jardiniers", \
          text: "Rage de Vert a mené d'intenses discussions tout au long de l'année 2020 concernant les modestes salaires des jardiniers. Ce qui a inauguré une nouvelle pratique respectant les situations financières très disparates des abonnés, qui rendait une simple augmentation des prix des paniers guère envisageable. Cette pratique consiste à offrir des choix de suppléments au tarif de base, de façon à ce que chacun connaisse de façon transparente le lien entre le prix de son abonnement, et le salaire des jardiniers. Les options ci-dessous vous permettent de sélectionner le prix de votre panier, en sachant ce que cela implique pour les revenus des jardiniers si tous les abonnés font le même choix que vous.", \
          hint: false, \
          wrapper_html: { class: ('disabled' if support_checked) }, input_html: { disabled: support_checked }
      - if Current.acp.tapatate?
        = f.input :waiting_basket_price_extra, as: :pretty_radio, collection: basket_prices_extra_collection, \
          label: t('members.membership_renewals.new.tapatate.basket_price_extra.label'), \
          text: t('members.membership_renewals.new.tapatate.basket_price_extra.text'), \
          hint: false, \
          wrapper_html: { class: ('disabled' if support_checked) }, input_html: { disabled: support_checked }

    - if BasketComplement.visible.any?
      = f.input :waiting_basket_complement_ids, as: :pretty_check_boxes, collection: basket_complements_collection, label: BasketComplement.model_name.human(count: 2), wrapper_html: { class: ('disabled' if support_checked) }, disabled: (basket_complements_collection.map(&:last) if support_checked)

    = f.input :waiting_depot, as: :pretty_radio, collection: depots_collection, label: Depot.model_name.human, required: true,
    wrapper_html: { class: ('disabled' if support_checked) }, input_html: { disabled: support_checked }

  - if Current.acp.billing_year_divisions.many?
    = f.inputs name: t('active_admin.resource.show.billing') do
      = f.input :billing_year_division, as: :pretty_radio, collection: billing_year_divisions_collection, wrapper_html: { class: ('disabled' if support_checked) }, input_html: { disabled: support_checked }

  = f.inputs name: t('.more_info') do
    = f.input :profession
    = f.input :come_from, as: :text, input_html: { rows: 3 }
    = f.input :note, as: :text, input_html: { rows: 3 }, label: t('.note'), placeholder: true

  - if Current.acp.terms_of_service_url || Current.acp.statutes_url
    = f.inputs do
      = f.input :terms_of_service, as: :pretty_boolean, label: terms_of_service_label

  = f.actions do
    = f.action :submit, as: :button, label: t('.submit')
