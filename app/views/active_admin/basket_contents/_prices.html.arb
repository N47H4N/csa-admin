used_cycles = Membership.used_delivery_cycle_ids_for(delivery.fy_year)
delivery.basket_content_prices.each do |basket_size, depot_prices|
  prices = [ depot_prices.values.min, depot_prices.values.max ].uniq.compact
  if prices.any?
    basket_price = basket_size.price_for(delivery.fy_year)
    div class: "basket_price #{prices.many? ? 'tooltip-toggle' : ''}", "data-tooltip" => depot_prices_list(depot_prices) do
      span basket_size.name, class: "title"
      span display_basket_price_with_diff(basket_price, prices), class: "prices"
      delivery.basket_content_yearly_price_diff(basket_size)&.each do |(cycle, diff)|
        deliveries_count_so_far = cycle.deliveries_in(delivery.fiscal_year.beginning_of_year..delivery.date).size
        baskets_price_total = basket_price * deliveries_count_so_far
        if used_cycles.many?
          title = [ cycle.name, delivery.fiscal_year.to_s ].join(" â€“ ")
        else
          title = delivery.fiscal_year
        end
        span title, class: "subtitle"
        span display_basket_price_diff(baskets_price_total, diff), class: "avg_diff"
      end
    end
  end
end
