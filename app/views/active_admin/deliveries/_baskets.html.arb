counts = delivery.basket_counts(scope: scope)
bs_names = delivery.basket_sizes.map(&:name)
bs_splitter = bs_names.join.size > 20 ? "&nbsp;/<br/>" : " /&nbsp;"

table_for counts.all, class: 'next-delivery' do
  column Depot.model_name.human, :title, class: 'depot'
  column Basket.model_name.human(count: 2), :count, class: 'total align-right'
  column "#{bs_names.join(bs_splitter)}".html_safe, :baskets_count, class: 'baskets-total align-right'
end

paid_depots = delivery.depots.paid
if paid_depots.any?
  free_counts = BasketCounts.new(delivery, Depot.free.pluck(:id), scope: scope)
  paid_counts = BasketCounts.new(delivery, Depot.paid.pluck(:id), scope: scope)
  totals = [
    OpenStruct.new(
      title: "#{Basket.model_name.human(count: 2)}: #{free_counts.depots.pluck(:name).to_sentence}",
      count: free_counts.sum,
      baskets_count: free_counts.sum_detail),
    OpenStruct.new(
      title: t('delivery.baskets_to_prepare'),
      count:  paid_counts.sum,
      baskets_count: paid_counts.sum_detail)
  ]
  table_for totals, class: 'next-delivery' do
    column nil, :title, class: 'depot'
    column nil, :count, class: 'total align-right'
    column nil, :baskets_count, class: 'baskets-total align-right'
  end
end

table_for nil, class: 'next-delivery next-delivery-total' do
  column(nil, :title, class: 'depot text-bold') { t('active_admin.page.index.totals', numbers: '') }
  column(class: 'total align-right text-bold') { counts.sum }
  column(class: 'baskets-total align-right text-bold') { counts.sum_detail }
end

if BasketComplement.any?
  counts = delivery.basket_complement_counts(scope: scope)
  div id: 'basket-complements-table' do
    if counts.any?
      table_for counts do
        column BasketComplement.model_name.human, :title
        if Current.acp.feature?('shop') && scope != :absent
          column Membership.model_name.human(count: 2), :memberships_count, class: 'align-right'
          column Shop::Order.model_name.human(count: 2), :shop_orders_count, class: 'align-right'
        end
        column t('active_admin.page.index.total', number: ''), :count, class: 'align-right'
      end
    else
      em t('delivery.no_basket_complements')
    end
  end
end
