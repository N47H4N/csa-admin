# frozen_string_literal: true

ul class: "counts" do
  %i[future pending validated paid missing].each do |scope|
    li do
      path =
        case scope
        when :missing
          memberships_path(scope: :all, q: {
            activity_participations_missing_gt: 0,
            during_year: Current.org.current_fiscal_year.year
          })
        when :paid
          invoices_path(scope: :all, q: {
            entity_type_in: "ActivityParticipation",
            activity_participations_fiscal_year: Current.org.current_fiscal_year.year
          })
        else
          activity_participations_path(scope: scope, q: {
            during_year: Current.org.current_fiscal_year.year
          })
        end
      count =
        case scope
        when :missing
          Membership.current_year.sum(&:activity_participations_missing)
        when :paid
          Invoice.not_canceled.activity_participations_fiscal_year(Current.fiscal_year).sum(:missing_activity_participations_count)
        else
          ActivityParticipation.current_year.send(scope).sum(:participants_count)
        end
      content = counter_tag(
        I18n.t("active_admin.resources.activity_participation.scopes.#{scope}").capitalize,
        count)

      a content, href: path
    end
  end
end
