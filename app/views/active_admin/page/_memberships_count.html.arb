ul class: 'counts' do
  scopes = %i[trial ongoing future]
  scopes.delete(:trial) unless Current.acp.trial_basket_count.positive?
  scopes << :future_next if Delivery.any_next_year?

  scopes.each do |scope|
    fy = (scope == :future_next) ? Current.acp.next_fiscal_year : Current.fiscal_year
    scope = :future if scope == :future_next
    label =
      I18n.t("active_admin.resources.membership.scopes.#{scope}",
        default: I18n.t("active_admin.scopes.#{scope}")).capitalize
    label += " (#{fy})" if scope == :future && fy != Current.fiscal_year
    li do
      count = Membership.during_year(fy).send(scope).count
      a href: memberships_path(scope: scope, q: { during_year: fy.year }) do
        span class: ('zero' if count.zero?) do
          span count.zero? ? 'â€“' : count, class: 'count'
          span label
        end
      end
    end
  end
end
